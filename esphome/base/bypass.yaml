###
# Summer bypass
###
# States:
## 0   = open, 550 = Closed
# What is it:
## Inside air is directed to the ourside without passing the heat exchanger
## Thus cold outside air does not heat up from the hot inside air

number:
  # seems not to be updated.
  # - name: ${b_2032}
  #   address: 2032
  #   id: bypass_valve_value
  #   min_value: 0
  #   max_value: ${max.flap}
  #   step: ${max.flap}
  #   platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: ${modbus_id}
  #   icon: mdi:valve


switch:
  - name: ${b_2033}
    address: 2033
    register_type: holding
    id: bypass_valve_on_off
    platform: modbus_controller
    modbus_controller_id: ${modbus_id}
    use_write_multiple: true
    icon: mdi:toggle-switch-variant
    
  - platform: template
    name: "Bypass valve - on/off" # 0 = auto 1 = Manual
    id: bypass_valve_on_off_switch
    icon: mdi:toggle-switch-variant
    restore_mode: RESTORE_DEFAULT_OFF
    lambda: |-
      if (id(bypass_valve_on_off).state == 1) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      then:
        if:
          condition:
            lambda: 'return id(hru_m3h_toevoer_binnen_total).state > 200;'
          then: 
            - logger.log: "The sensor value is above 200!, change fan to 200"
            - number.set:
                id: fan_demand_value
                value: 200 # Lower the fan to the bypass allowed value
            - delay: 5s # Give fan spindown time
            - switch.turn_on: bypass_valve_on_off
            - delay: 5s # Give bypass valve time to open
            - number.set:
                id: fan_demand_value
                value: 0 # Set the fan back to auto.
          else:
            - logger.log: "The sensor value is already below 200 we can turn on bypass"
            - switch.turn_on: bypass_valve_on_off
    turn_off_action:
      then:
        if:
          condition:
            lambda: 'return id(hru_m3h_toevoer_binnen_total).state > 200;'
          then: 
            - logger.log: "The sensor value is above 200, change fan to 200 before turning off"
            - number.set:
                id: fan_demand_value
                value: 200 # Lower the fan to the bypass allowed value
            - delay: 5s # Give fan spindown time
            - switch.turn_off: bypass_valve_on_off
            - delay: 5s # Give bypass valve time to open
            - number.set:
                id: fan_demand_value
                value: 0 # Set the fan back to auto.
          else:
            - logger.log: "The sensor value is below 200, turn off bypass"
            - switch.turn_off: bypass_valve_on_off
